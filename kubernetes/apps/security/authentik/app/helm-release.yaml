---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 2023.5.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  values:
    outposts:
      docker_image_base: ghcr.io/goauthentik/%(type)s
      # docker_image_base: ghcr.io/goauthentik/dev-%(type)s:gh-next
    fullnameOverride: authentik
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2023.5.3
      # repository: ghcr.io/goauthentik/dev-server
      # tag: gh-next
      pullPolicy: Always

    authentik:
      log_level: trace
      secret_key:
        valueFrom:
          secretKeyRef:
            name: authentik-secret
            key: authentik_secret_key
      error_reporting:
        enabled: true
        environment: "kryptonian"
      postgresql:
        host: "postgres.database.svc.cluster.local"
        name: "authentik"
        user: "authentik"
        password:
          valueFrom:
            secretKeyRef:
              name: authentik-secret
              key: postgres_password
      redis:
        host: "redis.database.svc.cluster.local"
      email:
        host: "10.100.1.5"
        port: 25
        use_tls: true
        # username: "samipsolutions/authentik"
        # password: "${SECRET_AUHENTIK_POSTAL_PASSWORD}"
        # from: "no-reply@123.com"

    ingress:
      enabled: true
      ingressClassName: "nginx"
      annotations:
        external-dns.home.arpa/enabled: "true"
        external-dns-cf/is-dns-public: "true"
        # traefik.ingress.kubernetes.io/router.middlewares: "networking-cloudflare-ips@kubernetescrd"
      hosts:
        - host: "auth.${SECRET_DOMAIN}"
          paths:
            - path: "/"
              pathType: Prefix
      tls:
        - hosts:
            - "auth.${SECRET_DOMAIN}"
        # secretName: skylab.fi-tls
    postgresql:
      enabled: false
    redis:
      enabled: false

    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
